{
	"name": "Vehicle Search",
	"serverCode": "/* Vehicle Work History Lookup (mentain_workshop + crew/parts names)\n * - Crew names from nas_pcr.stafff\n * - Spare part names from stores.stock_bal_region (prod_name)\n * - Robust product-name resolution: RAW / NORMALIZED / EXTRACTED code\n * - Works for parts_used rows and free-text fallback\n */\n\n//////////////////////////// Config ////////////////////////////\n$STAFF_DB  = 'nas_pcr';   // schema with stafff\n$STORES_DB = 'stores';    // schema with stock_bal_region\n\n//////////////////////////// Helpers ////////////////////////////\nfunction fetchOne($sql){ $rs = DB::Query($sql); return $rs ? $rs->fetchAssoc() : null; }\nfunction fetchAll($sql){ $out=[]; $rs=DB::Query($sql); while($rs && ($row=$rs->fetchAssoc())) $out[]=$row; return $out; }\nfunction h($s){ return htmlspecialchars((string)$s, ENT_QUOTES); }\nfunction fmtInt($n){ return number_format((int)$n); }\nfunction fmtDate($d){ if(!$d||$d=='0000-00-00'||$d=='0000-00-00 00:00:00') return '—'; return date('M j, Y', strtotime($d)); }\nfunction fmtDateTime($d){ if(!$d||$d=='0000-00-00 00:00:00') return '—'; return date('M j, Y H:i', strtotime($d)); }\nfunction statusText($s){ if($s==2) return 'Work Order Pending'; if($s==3) return 'Work Order Submitted'; if($s==4) return 'Vehicle Ready'; return (string)$s; }\nfunction statusClass($s){ if($s==4) return 'ok'; if($s==3) return 'warn'; if($s==2) return 'bad'; return 'neutral'; }\nfunction getParam($name,$default=''){ if(function_exists('postvalue')){ $v=postvalue($name); if($v!==null && $v!=='') return $v; } return isset($_REQUEST[$name])?$_REQUEST[$name]:$default; }\n\n/* Product code normalizers */\nfunction norm_code($s){ return strtoupper(preg_replace('/[^A-Z0-9]/', '', (string)$s)); }\nfunction raw_code($s){ return strtoupper(trim((string)$s)); }\nfunction extract_code($s){ $u = strtoupper((string)$s); if(preg_match('/[A-Z0-9]+/',$u,$m)) return $m[0]; return norm_code($u); }\nfunction sql_in_list($arr){\n  if(!$arr) return \"('')\";\n  $vals = array_map(function($v){ return \"'\".addslashes($v).\"'\"; }, array_values($arr));\n  return \"(\".implode(\",\", $vals).\")\";\n}\n\n//////////////////////////// Inputs ////////////////////////////\n$vehRaw  = trim((string)getParam('veh',''));\n$pg      = (int)getParam('pg',1); if($pg<1) $pg=1;\n$perPage = 15;\n$offset  = ($pg-1)*$perPage;\n\n//////////////////////////// Filter (vehNo + chassis) ////////////////////////////\n$vehNorm = strtoupper(preg_replace('/[^A-Z0-9]/', '', $vehRaw));\n$strip = \"REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(UPPER(%s), '-', ''), ' ', ''), '/', ''), '.', ''), '_', ''), ':', ''), '\\t','')\";\n$where = '';\nif($vehRaw!==''){\n  $vehEsc     = addslashes($vehRaw);\n  $vehNormEsc = addslashes($vehNorm);\n  $vehNoStripped  = sprintf($strip,\"COALESCE(mw.vehNo,'')\");\n  $chasStripped   = sprintf($strip,\"COALESCE(mw.chasisNo,'')\");\n  $where = \"\n    WHERE\n      UPPER(COALESCE(mw.vehNo,'')) LIKE UPPER('%{$vehEsc}%')\n      OR {$vehNoStripped} LIKE '%{$vehNormEsc}%'\n      OR {$chasStripped}  LIKE '%{$vehNormEsc}%'\n  \";\n}\n\n//////////////////////////// Count ////////////////////////////\n$row = fetchOne(\"\n  SELECT COUNT(*) AS cnt\n  FROM mentain_workshop mw\n  INNER JOIN stations s ON s.STATION = mw.Station\n  INNER JOIN regions  r ON r.REGION_ID = s.REGION_ID\n  $where\n\");\n$totalRows  = (int)($row['cnt'] ?? 0);\n$totalPages = max(1,(int)ceil($totalRows/$perPage));\nif($pg>$totalPages){ $pg=$totalPages; $offset=($pg-1)*$perPage; }\n\n//////////////////////////// Page Results ////////////////////////////\n$list = fetchAll(\"\n  SELECT\n    mw.reqID AS work_id,\n    mw.Station, mw.vehNo, mw.servicetype, mw.description, mw.KMR,\n    mw.requestedby, mw.requestedon, mw.arrivaltime, mw.arrivaldate,\n    mw.vehType, mw.chasisNo, mw.repairInstruction, mw.KMRin, mw.KMRout,\n    mw.WOreqBy, mw.WOreqOn, mw.status,\n    mw.workorder_id, mw.workDate, mw.partsUsed, mw.reccomendation, mw.submittedby, mw.submittedOn,\n    CASE\n      WHEN mw.submittedOn IS NULL OR mw.submittedOn='' THEN DATEDIFF(CURDATE(), DATE(mw.WOreqOn))\n      ELSE DATEDIFF(DATE(mw.submittedOn), DATE(mw.WOreqOn))\n    END AS total_days_at_wkshop,\n    s.REGION_ID, r.REGION\n  FROM mentain_workshop mw\n  INNER JOIN stations s ON s.STATION   = mw.Station\n  INNER JOIN regions  r ON r.REGION_ID = s.REGION_ID\n  $where\n  ORDER BY mw.reqID DESC\n  LIMIT $offset, $perPage\n\");\n\n//////////////////////////// Prefetch CREW ////////////////////////////\n$workIds = array_map(function($r){ return (int)$r['work_id']; }, $list);\n$crewByWork = []; \n$partsByWork = [];\n\nif ($workIds){\n  $ids = implode(',', array_map('intval',$workIds));\n\n  $crewRows = fetchAll(\"\n    SELECT  c.ID,\n            mw.reqID AS work_id,\n            c.work_id AS source_work_id,\n            c.staffID, c.wordDone,\n            sf.SURNAMES, sf.FIRSTNAMES, sf.`MIDDLE NAME` AS MIDDLENAME\n    FROM mentain_workshop mw\n    JOIN crew_workdone c\n      ON (c.work_id = mw.reqID OR c.work_id = mw.workorder_id)\n    LEFT JOIN `{$STAFF_DB}`.`stafff` sf\n      ON UPPER(TRIM(sf.username)) = UPPER(TRIM(c.staffID))\n    WHERE mw.reqID IN ($ids)\n    ORDER BY c.ID ASC\n  \");\n  foreach($crewRows as $cr){\n    $wid = (int)$cr['work_id'];\n    if(!isset($crewByWork[$wid])) $crewByWork[$wid]=[];\n    $full = trim(preg_replace('/\\s+/', ' ', ($cr['FIRSTNAMES']?:'').' '.($cr['MIDDLENAME']?:'').' '.($cr['SURNAMES']?:'')));\n    if($full==='') $full = (string)$cr['staffID'];\n    $crewByWork[$wid][] = [\n      'staffID'   => (string)$cr['staffID'],\n      'staffName' => $full,\n      'wordDone'  => (string)$cr['wordDone']\n    ];\n  }\n}\n\n//////////////////////////// Prefetch PARTS (rows + fallback + tolerant name map) ////////////////////////////\n$productCodesAll = [];  // collect codes to resolve once\nif ($workIds){\n  $ids = implode(',', array_map('intval',$workIds));\n\n  // 1) parts_used rows (reqID OR workorder_id)\n  $partRows = fetchAll(\"\n    SELECT  p.ID,\n            mw.reqID AS work_id,\n            p.work_id AS source_work_id,\n            p.sparePart AS product_id,\n            p.quantity\n    FROM mentain_workshop mw\n    JOIN parts_used p\n      ON (p.work_id = mw.reqID OR p.work_id = mw.workorder_id)\n    WHERE mw.reqID IN ($ids)\n    ORDER BY p.ID ASC\n  \");\n  foreach($partRows as $pr){\n    $wid = (int)$pr['work_id'];\n    if(!isset($partsByWork[$wid])) $partsByWork[$wid]=[];\n    $pid = trim((string)$pr['product_id']);\n    $partsByWork[$wid][] = [\n      'product_id' => $pid,\n      'prod_name'  => '',                 // fill later\n      'quantity'   => (string)$pr['quantity'] === '' ? null : (int)$pr['quantity']\n    ];\n    if($pid!=='') $productCodesAll[] = $pid;\n  }\n\n  // 2) Fallback: parse free-text 'partsUsed' where no relational rows were found\n  foreach ($list as $rec){\n    $wid = (int)$rec['work_id'];\n    if (!isset($partsByWork[$wid]) || !count($partsByWork[$wid])){\n      $raw = (string)$rec['partsUsed'];\n      if ($raw !== ''){\n        $tokens = preg_split('/[,\\;\\s]+/', $raw, -1, PREG_SPLIT_NO_EMPTY);\n        $seen = [];\n        foreach ($tokens as $t){\n          $code = trim($t);\n          if ($code==='') continue;\n          $base = extract_code($code);\n          if (isset($seen[$base])) continue; $seen[$base] = true;\n          if(!isset($partsByWork[$wid])) $partsByWork[$wid]=[];\n          $partsByWork[$wid][] = [\n            'product_id' => $code,  // keep original text\n            'prod_name'  => '',     // fill later\n            'quantity'   => null\n          ];\n          $productCodesAll[] = $code;\n        }\n      }\n    }\n  }\n\n  // 3) Build compact name map from stores.stock_bal_region for the relevant codes only\n  $rawSet  = []; $normSet = []; $exSet = [];\n  foreach ($productCodesAll as $c){\n    $rawSet[ raw_code($c) ] = true;\n    $normSet[ norm_code($c) ] = true;\n    $exSet[ extract_code($c) ] = true;\n  }\n  $inRaw  = sql_in_list(array_filter(array_keys($rawSet)));\n  $inNorm = sql_in_list(array_filter(array_keys($normSet)));\n  $inEx   = sql_in_list(array_filter(array_keys($exSet)));\n\n  $mapRows = fetchAll(\"\n    SELECT\n      product AS product_id_raw,\n      UPPER(TRIM(product)) AS key_raw,\n      REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(UPPER(product),'-',''),' ',''),'/', ''),'.',''),'_',''),':','') AS key_norm,\n      MAX(prod_name) AS product_name\n    FROM `{$STORES_DB}`.`stock_bal_region`\n    WHERE UPPER(TRIM(product)) IN $inRaw\n       OR REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(UPPER(product),'-',''),' ',''),'/', ''),'.',''),'_',''),':','') IN $inNorm\n       OR UPPER(TRIM(product)) IN $inEx\n    GROUP BY product_id_raw, key_raw, key_norm\n  \");\n\n  $nameByRaw  = [];\n  $nameByNorm = [];\n  foreach ($mapRows as $mr){\n    $nm = (string)$mr['product_name'];                // ← prod_name aliased\n    $rawKey  = strtoupper(trim((string)$mr['key_raw']));\n    $normKey = strtoupper(trim((string)$mr['key_norm']));\n    if ($rawKey  !== '') $nameByRaw[$rawKey]   = $nm;\n    if ($normKey !== '') $nameByNorm[$normKey] = $nm;\n  }\n\n  // 4) Assign names using RAW → NORM → EXTRACT fallback\n  foreach ($partsByWork as $wid => $arr){\n    foreach ($arr as $i => $p){\n      $raw  = raw_code($p['product_id']);\n      $norm = norm_code($p['product_id']);\n      $ex   = extract_code($p['product_id']);\n      $nm = '';\n      if (isset($nameByRaw[$raw]))        $nm = $nameByRaw[$raw];\n      else if (isset($nameByNorm[$norm])) $nm = $nameByNorm[$norm];\n      else {\n        $exRaw  = raw_code($ex);\n        $exNorm = norm_code($ex);\n        if (isset($nameByRaw[$exRaw]))        $nm = $nameByRaw[$exRaw];\n        else if (isset($nameByNorm[$exNorm])) $nm = $nameByNorm[$exNorm];\n      }\n      $partsByWork[$wid][$i]['prod_name'] = ($nm !== '') ? $nm : $p['product_id'];\n    }\n  }\n}\n\n//////////////////////////// JSON payload ////////////////////////////\n$payload = [];\nforeach($list as $r){\n  $wid = (int)$r['work_id'];\n  $arrivalTxt = trim(($r['arrivaldate'] ? fmtDate($r['arrivaldate']) : '—').' '.($r['arrivaltime'] ?: ''));\n  $payload[] = [\n    'work_id'      => $wid,\n    'Station'      => (string)$r['Station'],\n    'REGION'       => (string)$r['REGION'],\n    'vehNo'        => (string)$r['vehNo'],\n    'vehType'      => (string)$r['vehType'],\n    'servicetype'  => (string)$r['servicetype'],\n    'description'  => (string)$r['description'],\n    'KMR'          => (string)$r['KMR'],\n    'requestedon'  => (string)fmtDateTime($r['requestedon']),\n    'requestedby'  => (string)$r['requestedby'],\n    'WOreqOn'      => (string)fmtDateTime($r['WOreqOn']),\n    'WOreqBy'      => (string)$r['WOreqBy'],\n    'arrival'      => (string)$arrivalTxt,\n    'chasisNo'     => (string)$r['chasisNo'],\n    'repairInstruction' => (string)$r['repairInstruction'],\n    'KMRin'        => (string)$r['KMRin'],\n    'KMRout'       => (string)$r['KMRout'],\n    'status_code'  => (int)$r['status'],\n    'status_text'  => statusText($r['status']),\n    'status_class' => statusClass($r['status']),\n    'workorder_id' => (string)$r['workorder_id'],\n    'workDate'     => (string)fmtDate($r['workDate']),\n    'partsUsed'    => (string)$r['partsUsed'],\n    'reccomendation'=> (string)$r['reccomendation'],\n    'submittedby'  => (string)$r['submittedby'],\n    'submittedOn'  => (string)fmtDateTime($r['submittedOn']),\n    'total_days_at_wkshop' => (int)max(0,(int)$r['total_days_at_wkshop']),\n    'crew'         => isset($crewByWork[$wid])  ? $crewByWork[$wid]  : [],\n    'parts'        => isset($partsByWork[$wid]) ? $partsByWork[$wid] : []\n  ];\n}\n$json = json_encode($payload, JSON_HEX_TAG|JSON_HEX_AMP|JSON_HEX_APOS|JSON_HEX_QUOT);\n\n//////////////////////////// Table rows ////////////////////////////\n$rowsHtml = '';\nif(!$list){\n  $rowsHtml .= '<tr><td colspan=\"9\" class=\"vh-muted\" style=\"text-align:center; padding:16px;\">No work orders found.</td></tr>';\n}else{\n  foreach($list as $r){\n    $wid = (int)$r['work_id'];\n    $rowsHtml .= '<tr>';\n    $rowsHtml .= '<td>'.fmtInt($wid).'</td>';\n    $rowsHtml .= '<td>'.h($r['vehNo']).'</td>';\n    $rowsHtml .= '<td>'.h($r['Station']).'</td>';\n    $rowsHtml .= '<td>'.h($r['REGION']).'</td>';\n    $rowsHtml .= '<td>'.h($r['servicetype']).'</td>';\n    $rowsHtml .= '<td>'.fmtDateTime($r['WOreqOn'] ?: $r['requestedon']).'</td>';\n    $rowsHtml .= '<td>'.h(trim(($r['arrivaldate']?fmtDate($r['arrivaldate']):'—').' '.($r['arrivaltime']?:''))).'</td>';\n    $rowsHtml .= '<td><span class=\"pill '.statusClass($r['status']).'\">'.h(statusText($r['status'])).'</span></td>';\n    $rowsHtml .= '<td class=\"vh-actions\"><button type=\"button\" class=\"vh-btn\" onclick=\"openWorkModal('.$wid.')\">View</button></td>';\n    $rowsHtml .= '</tr>';\n  }\n}\n\n//////////////////////////// Output (layout + modal) ////////////////////////////\necho <<<'HTML'\n<style>\n  .vh-wrap { font-family: system-ui,-apple-system,Segoe UI,Roboto,Arial; padding:18px; }\n  .vh-title { margin:0 0 10px; }\n  .vh-bar { display:flex; gap:8px; align-items:center; margin:0 0 12px; background:#fff; border:1px solid #e5e7eb; border-radius:12px; padding:10px; }\n  .vh-input { flex:1; border:1px solid #e5e7eb; border-radius:10px; padding:10px 12px; outline:none; }\n  .vh-btn { padding:10px 14px; border-radius:10px; border:1px solid #d0d7de; background:#f6f8fa; cursor:pointer; }\n  .vh-btn.primary { background:#0ea5e9; color:#fff; border-color:#0284c7; }\n  .vh-panel { border:1px solid #e5e7eb; border-radius:14px; background:#fff; padding:12px; }\n  .vh-count { color:#6b7280; font-size:13px; margin-bottom:10px; }\n  table.vh { width:100%; border-collapse:collapse; font-size:14px; }\n  table.vh th, table.vh td { padding:10px 12px; border-bottom:1px solid #f1f5f9; }\n  table.vh thead th { background:#f9fafb; border-bottom:1px solid #e5e7eb; font-weight:600; text-align:left; }\n  .pill { display:inline-block; padding:.25rem .6rem; border-radius:999px; font-size:.85rem; font-weight:700; border:1px solid transparent; }\n  .pill.ok   { background:#e6f4ea; color:#0f5132; border-color:#badbcc; }\n  .pill.warn { background:#fff3cd; color:#8a6d3b; border-color:#ffe69c; }\n  .pill.bad  { background:#fee2e2; color:#991b1b; border-color:#fecaca; }\n  .vh-actions .vh-btn { padding:6px 10px; }\n  .vh-pagination { display:flex; gap:8px; align-items:center; justify-content:flex-end; margin-top:10px; font-size:13px; }\n  .vh-modal-mask { position:fixed; inset:0; display:none; align-items:center; justify-content:center; background:rgba(0,0,0,.35); z-index:9999; }\n  .vh-modal { background:#f7fafc; width:min(1100px, 96vw); max-height:92vh; border-radius:14px; box-shadow:0 10px 30px rgba(0,0,0,.2); overflow:hidden; display:flex; flex-direction:column; }\n  .vh-modal-hd { padding:12px 16px; background:#0ea5e9; color:#fff; display:flex; align-items:center; justify-content:space-between; }\n  .vh-modal-bd { padding:16px; overflow:auto; }\n  .sec { border:1px solid #cbd5e1; background:#fff; border-radius:10px; margin-bottom:12px; }\n  .sec-hd { padding:8px 12px; background:#e2e8f0; color:#111827; font-weight:700; border-bottom:1px solid #cbd5e1; }\n  .sec-bd { padding:12px; }\n  .grid-2 { display:grid; grid-template-columns:repeat(2, minmax(0,1fr)); gap:10px 16px; }\n  .fld .lbl { font-size:12px; color:#6b7280; }\n  .fld .val { font-weight:600; }\n  .subtable { margin-top:8px; border:1px solid #e5e7eb; border-radius:8px; overflow:hidden; }\n  .subtable table { width:100%; border-collapse:collapse; font-size:13px; }\n  .subtable th, .subtable td { padding:8px 10px; border-bottom:1px solid #eef2f7; text-align:left; }\n  .subtable thead th { background:#f9fafb; }\n</style>\n\n<div class=\"vh-wrap\">\n  <h2 class=\"vh-title\">🔎 Vehicle Work History (Workshop)</h2>\n\n  <form method=\"get\" action=\"\" class=\"vh-bar\" id=\"vh-search-form\">\n    <input type=\"text\" class=\"vh-input\" name=\"veh\" id=\"veh\" placeholder=\"Enter vehicle number e.g. GR-1234-21\" />\n    <button class=\"vh-btn primary\" type=\"submit\">Search</button>\n    <a class=\"vh-btn\" href=\"?veh=\">Clear</a>\n  </form>\n\n  <div class=\"vh-panel\">\n    <div class=\"vh-count\" id=\"vh-count\"></div>\n    <div style=\"overflow:auto;\">\n      <table class=\"vh\">\n        <thead>\n          <tr>\n            <th>Work ID</th>\n            <th>Vehicle</th>\n            <th>Station</th>\n            <th>Region</th>\n            <th>Service Type</th>\n            <th>WO Requested On</th>\n            <th>Arrival Date/Time</th>\n            <th>Status</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody id=\"vh-body\">\nHTML;\n\necho $rowsHtml;\n\necho <<<'HTML'\n        </tbody>\n      </table>\n    </div>\n\n    <div class=\"vh-pagination\">\nHTML;\n\n$qsVeh = 'veh='.rawurlencode($vehRaw);\necho '<span>Page '.fmtInt($pg).' of '.fmtInt($totalPages).'</span>';\nif ($pg > 1){\n  echo '<a class=\"vh-btn\" href=\"?'.$qsVeh.'&pg=1\">« First</a>';\n  echo '<a class=\"vh-btn\" href=\"?'.$qsVeh.'&pg='.($pg-1).'\">‹ Prev</a>';\n} else {\n  echo '<span class=\"vh-btn\" style=\"opacity:.5;\">« First</span><span class=\"vh-btn\" style=\"opacity:.5;\">‹ Prev</span>';\n}\nif ($pg < $totalPages){\n  echo '<a class=\"vh-btn\" href=\"?'.$qsVeh.'&pg='.($pg+1).'\">Next ›</a>';\n  echo '<a class=\"vh-btn\" href=\"?'.$qsVeh.'&pg='.$totalPages.'\">Last »</a>';\n} else {\n  echo '<span class=\"vh-btn\" style=\"opacity:.5;\">Next ›</span><span class=\"vh-btn\" style=\"opacity:.5;\">Last »</span>';\n}\n\necho <<<'HTML'\n    </div>\n  </div>\n</div>\n\n<!-- Modal -->\n<div class=\"vh-modal-mask\" id=\"vh-modal-mask\">\n  <div class=\"vh-modal\">\n    <div class=\"vh-modal-hd\">\n      <div id=\"vh-modal-title\" style=\"font-weight:700;\">Work Details</div>\n      <button type=\"button\" class=\"vh-btn\" onclick=\"closeWorkModal()\">Close ✕</button>\n    </div>\n    <div class=\"vh-modal-bd\" id=\"vh-modal-body\"></div>\n  </div>\n</div>\nHTML;\n\necho '<script id=\"work-data\" type=\"application/json\">'.$json.'</script>';\n\necho <<<'HTML'\n<script>\n(function(){\n  var vehVal = (new URLSearchParams(location.search)).get('veh') || '';\n  var vehInput = document.getElementById('veh'); if(vehInput) vehInput.value = vehVal;\n\n  var rowsOnPage = document.querySelectorAll('#vh-body tr').length;\n  var countEl = document.getElementById('vh-count');\n  if(countEl){\n    countEl.innerHTML = (vehVal ? 'Results for <b>'+escapeHtml(vehVal)+'</b>: ' : '') + rowsOnPage + ' record(s) on this page';\n  }\n\n  var dataTag = document.getElementById('work-data');\n  var workDetails = [];\n  try { workDetails = JSON.parse(dataTag ? dataTag.textContent : '[]'); } catch(e){ workDetails = []; }\n\n  window.openWorkModal = function(id){\n    id = Number(id);\n    var d = workDetails.find(function(x){ return Number(x.work_id)===id; });\n    if(!d) return;\n\n    document.getElementById('vh-modal-title').textContent = 'Work Details — #'+id;\n\n    var sec1 = section('SERVICE REQUEST DETAILS <<', grid2([\n      fld('Station', d.Station),          fld('Region', d.REGION),\n      fld('Veh No', d.vehNo),             fld('Veh Type', d.vehType),\n      fld('Servicetype', d.servicetype),  fld('Description', d.description),\n      fld('KMR', d.KMR),                  null,\n      fld('Requestedon', d.requestedon),  fld('Requestedby', d.requestedby)\n    ]));\n\n    var sec2 = section('WORK ORDER DETAILS <<', grid2([\n      fld('Arrivaldate', d.arrival),          fld('Chasis No', d.chasisNo),\n      fld('Repair Instruction', d.repairInstruction), fld('W Oreq On', d.WOreqOn),\n      fld('Workorder Id', d.workorder_id),    fld('W Oreq By', d.WOreqBy)\n    ]));\n\n    var sec3 = section('ACTUAL WORK DONE <<', grid2([\n      fld('Work Date', d.workDate),           fld('Parts Used', d.partsUsed),\n      fld('Work Done', d.reccomendation),     fld('Submittedby', d.submittedby),\n      fld('Submitted On', d.submittedOn),     fld('Total Days at Workshop', String(d.total_days_at_wkshop))\n    ]));\n\n    var crewRows = (d.crew||[]).map(function(c){\n      return '<tr><td>'+escapeHtml(c.staffName||\"\")+'</td><td>'+escapeHtml(c.staffID||\"\")+'</td><td>'+escapeHtml(c.wordDone||\"\")+'</td></tr>';\n    }).join('') || '<tr><td colspan=\"3\" class=\"vh-muted\">No crew recorded.</td></tr>';\n\n    var partsRows = (d.parts||[]).map(function(p){\n      var qty = (p.quantity==null || p.quantity===undefined || p.quantity==='') ? '-' : String(p.quantity);\n      return '<tr><td>'+escapeHtml(p.prod_name||\"\")+'</td><td>'+escapeHtml(p.product_id||\"\")+'</td><td>'+escapeHtml(qty)+'</td></tr>';\n    }).join('') || '<tr><td colspan=\"3\" class=\"vh-muted\">No spare parts recorded.</td></tr>';\n\n    var sec4 = section('CREW THAT WORKED ON THE VEHICLE <<',\n      '<div class=\"subtable\"><table><thead><tr><th>Name</th><th>Staff ID</th><th>Work Done</th></tr></thead><tbody>'+crewRows+'</tbody></table></div>'\n    );\n\n    var sec5 = section('SPARE PARTS/CONSUMABLES USED <<',\n      '<div class=\"subtable\"><table><thead><tr><th>Spare Part</th><th>Product ID</th><th>Qty</th></tr></thead><tbody>'+partsRows+'</tbody></table></div>'\n    );\n\n    document.getElementById('vh-modal-body').innerHTML = sec1 + sec2 + sec3 + sec4 + sec5;\n    document.getElementById('vh-modal-mask').style.display = 'flex';\n  };\n\n  window.closeWorkModal = function(){ document.getElementById('vh-modal-mask').style.display = 'none'; };\n\n  function section(title, bodyHtml){\n    return '<div class=\"sec\"><div class=\"sec-hd\">'+escapeHtml(title)+'</div><div class=\"sec-bd\">'+bodyHtml+'</div></div>';\n  }\n  function grid2(arr){\n    var cells = arr.map(function(x){\n      if(!x) return '<div></div>';\n      return '<div class=\"fld\"><div class=\"lbl\">'+escapeHtml(x.label)+'</div><div class=\"val\">'+escapeHtml(x.value||\"\")+'</div></div>';\n    }).join('');\n    return '<div class=\"grid-2\">'+cells+'</div>';\n  }\n  function fld(label,value){ return {label:label, value:value}; }\n  function escapeHtml(s){ return String(s==null?'':s).replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;').replace(/\"/g,'&quot;').replace(/'/g,'&#039;'); }\n\n  var form = document.getElementById('vh-search-form');\n  var input = document.getElementById('veh');\n  if(input && form){\n    input.addEventListener('keydown', function(e){ if(e.key==='Enter'){ form.submit(); } });\n  }\n})();\n</script>\nHTML;\n"
}